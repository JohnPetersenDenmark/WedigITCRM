// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WedigITCRM;

namespace WedigITCRM.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WedigITCRM.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NotificationIsSent")
                        .HasColumnType("bit");

                    b.Property<string>("NotifyOffset")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.Property<int>("contactPersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("WedigITCRM.BookingResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CalendarEventsColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailForCalendar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobServiceTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BookingResources");
                });

            modelBuilder.Entity("WedigITCRM.BookingService", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DineroGuiD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GapTimeAfterInMinutes")
                        .HasColumnType("int");

                    b.Property<int>("GapTimeBeforeInMinutes")
                        .HasColumnType("int");

                    b.Property<bool>("IsBookable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.Property<int>("durationInMinutes")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("BookingServices");
                });

            modelBuilder.Entity("WedigITCRM.BookingSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookingAPIkey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookingFreeTimeInterval")
                        .HasColumnType("int");

                    b.Property<DateTime>("FridayOfficeEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FridayOfficeStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MondayOfficeEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MondayOfficeStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SaturdayOfficeEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SaturdayOfficeStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SundayOfficeEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SundayOfficeStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThursdayOfficeEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThursdayOfficeStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TuesdayOfficeEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TuesdayOfficeStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WednesdayOfficeEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WednesdayOfficeStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BookingSetups");
                });

            modelBuilder.Entity("WedigITCRM.CalendarEntry", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalendarEventResourceOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFromResourceCalendar")
                        .HasColumnType("bit");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endDateTimeRange")
                        .HasColumnType("datetime2");

                    b.Property<string>("rangeWeekDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("repeatingId")
                        .HasColumnType("int");

                    b.Property<bool>("selectRepeat")
                        .HasColumnType("bit");

                    b.Property<bool>("selectallday")
                        .HasColumnType("bit");

                    b.Property<DateTime>("startDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDateTimeRange")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("CalendarEntries");
                });

            modelBuilder.Entity("WedigITCRM.ChangePasswordRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("LinkRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SendToEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("changePasswordRequests");
                });

            modelBuilder.Entity("WedigITCRM.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVRNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DineroGuiD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeignCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeignZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPerson")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SMSverificationCode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.Property<string>("postalCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyAccountId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("WedigITCRM.CompanyAccount", b =>
                {
                    b.Property<int>("companyAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountToPayForLicense")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Booking")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Companyidentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ContactsToDineroLastSynchronizationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContactsToNyxiumLastSynchronizationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DineroAPIOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DineroAPIOrganizationKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IntegrationDinero")
                        .HasColumnType("bit");

                    b.Property<string>("LogoAttachmentIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NyxiumLicenseTypeId")
                        .HasColumnType("int");

                    b.Property<string>("NyxiumLicenseTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SalesStatistic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StockItemsToDineroLastSynchronizationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StockItemsToNyxiumSynchronizationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SubscriptionCRM")
                        .HasColumnType("bit");

                    b.Property<bool>("SubscriptionInventory")
                        .HasColumnType("bit");

                    b.Property<bool>("SubscriptionProcurement")
                        .HasColumnType("bit");

                    b.Property<bool>("SubscriptionVendor")
                        .HasColumnType("bit");

                    b.Property<DateTime>("VendorsItemsToDineroLastSynchronizationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("activationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("activationKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("registrationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("synchronizeCustomerFromDineroToNyxium")
                        .HasColumnType("bit");

                    b.Property<bool>("synchronizeCustomerFromNyxiumToDinero")
                        .HasColumnType("bit");

                    b.Property<bool>("synchronizeStockItemFromDineroToNyxium")
                        .HasColumnType("bit");

                    b.Property<bool>("synchronizeStockItemFromNyxiumToDinero")
                        .HasColumnType("bit");

                    b.HasKey("companyAccountId");

                    b.ToTable("companyAccounts");
                });

            modelBuilder.Entity("WedigITCRM.ContactPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DineroGuiD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ContactPersons");
                });

            modelBuilder.Entity("WedigITCRM.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.Property<long>("length")
                        .HasColumnType("bigint");

                    b.Property<string>("uniqueInternalFileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVRNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DineroGuiD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeignCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeignZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPerson")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SMSverificationCode")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.Property<string>("postalCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyAccountId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.ContentType", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconFileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Type");

                    b.ToTable("ContentTypes");
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.CurrencyCode", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyCodes");
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.DeliveryCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DeliveryConditions");
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttachedFilesNameAndPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachedmentIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ContentTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileNamesOnly")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconsFilePathAndName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.Property<int>("contactPersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.PaymentCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaymentConditions");
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AllReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExchangeRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OurOrderingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OurReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderDocumentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceivedStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SendToVendorDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorDeliveryConditionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorDeliveryConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorHomePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorPaymentConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorPaymentConditionsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WantedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.PurchaseOrderLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OurItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OurItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OurLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OurUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OurUnitCostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OurUnitSalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuantityToOrder")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockItemId")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<string>("VendorItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VendorSalesUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrderLines");
                });

            modelBuilder.Entity("WedigITCRM.JobServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookingServicesIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("jobServiceTypes");
                });

            modelBuilder.Entity("WedigITCRM.LicenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalesPriceAnnualPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesPriceMonthlyPayment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("LicenseTypes");
                });

            modelBuilder.Entity("WedigITCRM.PostalCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("postnumre");
                });

            modelBuilder.Entity("WedigITCRM.RelateCompanyAccountWithRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("companyAccount")
                        .HasColumnType("int");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("relateCompanyAccountWithRoles");
                });

            modelBuilder.Entity("WedigITCRM.RelateCompanyAccountWithUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccount")
                        .HasColumnType("int");

                    b.Property<string>("user")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("relateCompanyAccountWithUsers");
                });

            modelBuilder.Entity("WedigITCRM.StockItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DineroGuiD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Expirationdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InStockAgainDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberInStock")
                        .HasColumnType("int");

                    b.Property<int>("ReorderNumberInStock")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("StockValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<string>("VendorItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("category1Id")
                        .HasColumnType("int");

                    b.Property<int>("category2Id")
                        .HasColumnType("int");

                    b.Property<int>("category3Id")
                        .HasColumnType("int");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("stockItems");
                });

            modelBuilder.Entity("WedigITCRM.StockItemCategory1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("stockItemCategory1s");
                });

            modelBuilder.Entity("WedigITCRM.StockItemCategory2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category1Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("stockItemCategory2s");
                });

            modelBuilder.Entity("WedigITCRM.StockItemCategory3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category2Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("stockItemCategory3s");
                });

            modelBuilder.Entity("WedigITCRM.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVRNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliveryConditionsId")
                        .HasColumnType("int");

                    b.Property<Guid>("DineroGuiD")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeignCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForeignZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastEditedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentConditionsId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("companyAccountId")
                        .HasColumnType("int");

                    b.Property<string>("postalCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("companyAccountId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WedigITCRM.Company", b =>
                {
                    b.HasOne("WedigITCRM.CompanyAccount", "companyAccount")
                        .WithMany()
                        .HasForeignKey("companyAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WedigITCRM.EntitityModels.Contact", b =>
                {
                    b.HasOne("WedigITCRM.CompanyAccount", "companyAccount")
                        .WithMany()
                        .HasForeignKey("companyAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WedigITCRM.Vendor", b =>
                {
                    b.HasOne("WedigITCRM.CompanyAccount", "companyAccount")
                        .WithMany()
                        .HasForeignKey("companyAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
