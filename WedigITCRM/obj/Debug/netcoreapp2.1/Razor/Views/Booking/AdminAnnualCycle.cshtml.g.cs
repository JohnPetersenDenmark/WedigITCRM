#pragma checksum "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\Booking\AdminAnnualCycle.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fbdaa5f62ce4d20ae18a97f51d719695edc7e1d9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Booking_AdminAnnualCycle), @"mvc.1.0.view", @"/Views/Booking/AdminAnnualCycle.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Booking/AdminAnnualCycle.cshtml", typeof(AspNetCore.Views_Booking_AdminAnnualCycle))]
namespace AspNetCore
{
    #line hidden
    using System;
#line 6 "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\_ViewImports.cshtml"
using System.Collections.Generic;

#line default
#line hidden
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\_ViewImports.cshtml"
using WedigITCRM.ViewControllers;

#line default
#line hidden
#line 2 "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\_ViewImports.cshtml"
using WedigITCRM.Models;

#line default
#line hidden
#line 3 "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\_ViewImports.cshtml"
using WedigITCRM.ViewModels;

#line default
#line hidden
#line 4 "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\_ViewImports.cshtml"
using WedigITCRM;

#line default
#line hidden
#line 5 "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 7 "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\_ViewImports.cshtml"
using Newtonsoft.Json.Linq;

#line default
#line hidden
#line 8 "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\_ViewImports.cshtml"
using X.PagedList.Mvc.Core;

#line default
#line hidden
#line 9 "C:\Users\John\source\repos\WedigITCRM\WedigITCRM\Views\_ViewImports.cshtml"
using X.PagedList;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fbdaa5f62ce4d20ae18a97f51d719695edc7e1d9", @"/Views/Booking/AdminAnnualCycle.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e0b5aee07dbc12d92325b2fb942e71b71cc9414", @"/Views/_ViewImports.cshtml")]
    public class Views_Booking_AdminAnnualCycle : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "5", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "6", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "7", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Booking", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "AddOrEditAnnualCycleEvent", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-container"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("myForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2015, true);
            WriteLiteral(@"



<link href='https://unpkg.com/fullcalendar@3.10.1/dist/fullcalendar.min.css' rel='stylesheet' />


<script src='https://unpkg.com/fullcalendar@3.10.1/dist/fullcalendar.min.js'></script>
<script src='https://unpkg.com/fullcalendar@3.10.1/dist/locale-all.js'></script>





<div class=""formcontainer"">

    <div class=""form-group row"">
        <div class=""form-group col-sm-2 tableheadline"">
            Aftalekalender
        </div>
        <div class=""form-group col-sm-2"">
            <select id=""selectcalendarresource"" name=""selectcalendarresource"" class=""custom-select"">
            </select>
        </div>
        <div class=""form-group col-sm-2"">
            <div id=""resourceColorTagdiv"">

            </div>
        </div>

        <div class=""form-group col-sm-2"">
            <button type=""button"" class=""btn btn-primary"" OnClick=""initializeDialogFormresource();"">Kalender</button>
            <button type=""button"" class=""btn btn-primary"" OnClick=""toggleshowresourcecalendar()");
            WriteLiteral(@";"">Gem/Vis</button>
        </div>

        <input type=""text"" name=""resourceemail"" id=""resourceemail"" hidden />

        <input type=""text"" name=""resourcjobservices"" id=""resourcjobservices"" hidden />

    </div>


    <div class=""form-group row"">
        <div class=""form-group col-sm-6"" id=""resourcecalendarcolumn"">
            <div id=""containerresourcecalendar"">
                <div id=""resourcecalendar"">
                </div>
            </div>
            <div id=""dialogErrrorNoResurseSelected""></div>
            <div id=""dialogSelectResource""></div>

        </div>

        <div class=""form-group col-sm-6"">
            <div id=""annualcyclecalendar"">
            </div>
        </div>
        <div class=""form-group col-sm-1"">
            <div id=""dialogSelectEvents"">
            </div>
            <div id=""dialogMoveToAnnualCycleCalendar"">
            </div>

            <div id=""dialogformevent"" style=""position: relative;"">
                ");
            EndContext();
            BeginContext(2015, 5159, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a60e52b52d44330955e46ff8eb291f8", async() => {
                BeginContext(2134, 3755, true);
                WriteLiteral(@"
                    <div class=""form-group row"">
                        <div id=""datedialogtitle"" class=""form-group col-sm-8"">
                            <input type=""text"" name=""eventStartDate"" class=""form-control form-control-sm"" id=""eventStartDate"" readonly />
                        </div>
                    </div>
                    <br />

                    <div class=""form-group row"">
                        <div class=""form-group col-md-8"">
                            <label for=""selectallday""><b>Hele dagen</b></label>
                            <input type=""checkbox"" id=""selectallday"" name=""selectallday"">
                        </div>
                    </div>

                    <div class=""form-group row"">
                        <div id=""startdatetimediv"" class=""form-group col-md-8"">
                            <label for=""startDateTime""><b>Starttidspunkt</b></label>
                            <input type=""text"" class=""form-control form-control-sm"" placeholder=""Angiv ");
                WriteLiteral(@"starttidspunkt"" name=""startDateTime"" id=""startdatetimepicker"" required />
                        </div>
                    </div>

                    <div class=""form-group row"">
                        <div id=""enddatetimediv"" class=""form-group col-md-8"">
                            <label for=""endDateTime""><b>Sluttidspunkt</b></label>
                            <input type=""text"" placeholder=""Angiv sluttidspunkt"" class=""form-control form-control-sm"" name=""endDateTime"" id=""enddatetimepicker"" required />
                        </div>
                    </div>

                    <div class=""form-group row"">
                        <div class=""form-group col-md-8"">
                            <label for=""description""><b>Beskrivelse</b></label>
                            <input type=""text"" class=""form-control form-control-sm"" placeholder=""Beskrivelse"" name=""description"" id=""description"" required>
                        </div>
                    </div>

                    <div class=");
                WriteLiteral(@"""form-group row"">
                        <div class=""form-group col-md-8"">
                            <label for=""selectRepeat""><b>Gentag</b></label>
                            <input type=""checkbox"" id=""selectRepeat"" name=""selectRepeat"">
                        </div>
                    </div>


                    <div id=""selectRepeatDiv"">
                        <div class=""form-group row"">
                            <div id=""startdaterangetimediv"" class=""form-group col-md-8"">
                                <label for=""startDateTimeRange""><b>Vælg startdato</b></label>
                                <input class=""form-control form-control-sm"" type=""text"" placeholder=""Angiv startdato"" name=""startDateTimeRange"" id=""startdatetimerangepicker"" required />
                            </div>
                        </div>
                        <div class=""form-group row"">
                            <div id=""enddatetimerangediv"" class=""form-group col-md-8"">
                              ");
                WriteLiteral(@"  <label for=""endDateTimeRange""><b>Vælg slutdato</b></label>
                                <input type=""text"" class=""form-control form-control-sm"" placeholder=""Angiv slutdato"" name=""endDateTimeRange"" id=""enddatetimerangepicker"" required />
                            </div>
                        </div>
                        <div class=""form-group row"">
                            <div id=""rangeWeekDaysdiv"" class=""form-group col-md-8"">
                                <label for=""rangeWeekDays""><b>Ugedage</b></label>
                                <select id=""rangeWeekDays"" name=""rangeWeekDays"" class=""custom-select"" multiple>
                                    ");
                EndContext();
                BeginContext(5889, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "aa5c947aec7f4c948f4516d18fc55db9", async() => {
                    BeginContext(5907, 6, true);
                    WriteLiteral("Mandag");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5922, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(5960, 34, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4c6075b1f3c54bb6a2562a77a5fe66ab", async() => {
                    BeginContext(5978, 7, true);
                    WriteLiteral("Tirsdag");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(5994, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(6032, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d21a8be555474160b6bc9a7dbe6dc371", async() => {
                    BeginContext(6050, 6, true);
                    WriteLiteral("Onsdag");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6065, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(6103, 34, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "575617832e6d45d495b069c2caf3e320", async() => {
                    BeginContext(6121, 7, true);
                    WriteLiteral("Torsdag");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6137, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(6175, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "85419a60c0d949d099d38a7b20f27f4c", async() => {
                    BeginContext(6193, 6, true);
                    WriteLiteral("Fredag");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6208, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(6246, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "745bd6a91370497e9a381561f378ce44", async() => {
                    BeginContext(6264, 6, true);
                    WriteLiteral("Lørdag");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6279, 38, true);
                WriteLiteral("\r\n                                    ");
                EndContext();
                BeginContext(6317, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fa945596401b49a89007af48306b6759", async() => {
                    BeginContext(6335, 6, true);
                    WriteLiteral("søndag");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6350, 817, true);
                WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                    </div>
                    <input type=""text"" name=""rangeWeekDaysValues"" id=""rangeWeekDaysValues"" hidden>
                    <input type=""text"" name=""modifiedRepeatedEventIds"" id=""modifiedRepeatedEventIds"" hidden>
                    <input type=""text"" name=""calendarEventResourceOwnerId"" id=""calendarEventResourceOwnerId"" hidden>
                    <input type=""text"" name=""isFromResourceCalendar"" id=""isFromResourceCalendar"" hidden>
                    <input type=""text"" placeholder=""caleventid"" name=""caleventid"" id=""caleventid"" hidden>
                    <input type=""text"" placeholder=""calendarAction"" name=""calendarAction"" id=""calendarAction"" hidden>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_9.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7174, 45079, true);
            WriteLiteral(@"
            </div>

        </div>
    </div>
</div>



<script>

    $(document).ready(function () {



        initializeDialogSelectEvents();
        $('#dialogSelectEvents').dialog(""close"");

        initializeDialogFormEvent();
        $('#dialogformevent').dialog(""close"");


        $('#containerresourcecalendar').show();




        getAllResources();



        var now = moment();
        var TheFirstOfCurrentMonth = moment().startOf(now.month());
        var momentDateCalStyleStr = TheFirstOfCurrentMonth.format(""YYYY-MM-DD"");
        var calendarStartDate = moment(momentDateCalStyleStr);


        var OneYearAhead = now.add(1, 'years');
        var momentDateCalStyleStr = OneYearAhead.format(""YYYY-MM-DD"");
        var calendarEndDate = moment(momentDateCalStyleStr);




        $('#selectallday').bind('click', function () {
            if ($(this).is(':checked')) {
                $('#startdatetimediv').hide();
                $('#enddatetimediv').hide(");
            WriteLiteral(@");
            }
            else {
                $(""#startdatetimepicker"").val(""08:00"");
                $(""#enddatetimepicker"").val(""16:00"");
                $('#startdatetimediv').show();
                $('#enddatetimediv').show();
            }
        });

        $('#selectRepeat').bind('click', function () {

            var x = $(this).val();

            if ($(this).is(':checked')) {

                $('#selectRepeatDiv').show();
            }
            else {
                $('#selectRepeatDiv').hide();

            }
        });

        $('#selectcalendarresource').bind('change', function () {

            var resourceId = $(this).val();

            $(""#resourceColorTagdiv"").html("""");



            if (resourceId == ""0"") {
                getAllResources();
            }
            else {
                getResource(resourceId);
            }

        });

        $(function () {
            $(""#startdatetimepicker"").datetimepicker({
            ");
            WriteLiteral(@"    timepicker: true,
                datepicker: false,
                hours12: false,
                format: 'H:i'
            });
        });

        $(function () {
            $(""#enddatetimepicker"").datetimepicker({
                timepicker: true,
                datepicker: false,
                hours12: false,
                format: 'H:i'
            });
        });

        //$(function () {
        //    $(""#eventStartDate"").datetimepicker({
        //        timepicker: false,
        //        datepicker: true,
        //        hours12: false,
        //        format: 'd-m-y',
        //        minDate: calendarStartDate.format(""YYYY-MM-DD""),
        //        maxDate: calendarEndDate.format(""YYYY-MM-DD"")
        //    });
        //});

        $(function () {
            $(""#startdatetimerangepicker"").datetimepicker({
                timepicker: false,
                datepicker: true,
                hours12: false,
                format: 'd-m-y',
    ");
            WriteLiteral(@"            minDate: calendarStartDate.format(""YYYY-MM-DD""),
                maxDate: calendarEndDate.format(""YYYY-MM-DD"")
            });
        });

        $(function () {
            $(""#enddatetimerangepicker"").datetimepicker({
                timepicker: false,
                datepicker: true,
                hours12: false,
                format: 'd-m-y',
                minDate: calendarStartDate.format(""YYYY-MM-DD""),
                maxDate: calendarEndDate.format(""YYYY-MM-DD"")
            });
        });

        $.datetimepicker.setLocale('da');

        $(function () {
            var resourcecalendar = new $('#resourcecalendar').fullCalendar({

                validRange: {
                    start: calendarStartDate,
                    end: calendarEndDate
                },
                defaultView: 'agendaWeek',
                header: {
                    left: 'prev,next today,monthForward, monthPrev',
                    center: 'title',
               ");
            WriteLiteral(@"     right: 'month,agendaWeek,agendaDay'
                },
                locale: 'da',
                buttonIcons: false, // show the prev/next text
                weekNumbers: true,
                navLinks: true, // can click day/week names to navigate views
                editable: false,
                // selectable: true,
                dayClick: function (start, jsEvent, view) {

                },
                eventClick: function (eventObj) {
                    dialogMoveToAnnualCycleCalendar(eventObj);
                },
                events: function (start, end, timezone, callback) {

                    var resourceId = $('#selectcalendarresource option:selected').val()
                    if (resourceId == ""0"") {
                        var events = [];
                        callback(events);
                        return;
                    }

                    $.ajax({
                        type: ""POST"",
                        url: ""/booking/GetRe");
            WriteLiteral(@"sourceCalendarEvents"",
                        data: 'calendarEventResourceOwnerId=' + resourceId,
                        contentType: ""application/x-www-form-urlencoded; charset=utf-8"",
                        dataType: ""json"",

                        success: function (result) {
                            var events = [];

                            $.each(result, function (i, data) {
                                var momentStartDateDA = moment(data.startDateTime, 'DD-MM-YYYY kk:mm')
                                var momentStartDateCalStyleStr = momentStartDateDA.format(""YYYY-MM-DD kk:mm"");
                                var startDateTime = moment(momentStartDateCalStyleStr);

                                var momentEndDateDA = moment(data.endDateTime, 'DD-MM-YYYY kk:mm')
                                var momentEndDateCalStyleStr = momentEndDateDA.format(""YYYY-MM-DD kk:mm"");
                                var endDateTime = moment(momentEndDateCalStyleStr);

                   ");
            WriteLiteral(@"             var AllDayFlag = false;
                                if (data.selectallday == ""true"") {
                                    AllDayFlag = true;
                                }

                                var selectRepeatFlag = false;
                                if (data.selectRepeat == ""true"") {
                                    selectRepeatFlag = true;
                                }

                                events.push(
                                    {
                                        _id: data.calEventId,
                                        repeatedId: data.repeatedId,
                                        calendarEventResourceOwnerId: data.calendarEventResourceOwnerId,
                                        title: data.description,
                                        start: startDateTime,
                                        end: endDateTime,
                                        allDay: AllDayFlag,
                      ");
            WriteLiteral(@"                  selectRepeat: selectRepeatFlag,
                                        startDateTimeRange: data.startDateTimeRange,
                                        endDateTimeRange: data.endDateTimeRange,
                                        rangeWeekDaysValues: data.rangeWeekDaysValues,
                                        textColor: ""#000000"",
                                        backgroundColor: data.eventColor,
                                        borderColor: ""#DD5328""
                                    });
                            });

                            callback(events);
                        },
                        error: function (request, status, error) {
                            var jsonErrorObj = request.responseJSON
                            var errorText = jsonErrorObj.Detail;
                            var errorTitle = jsonErrorObj.Title;
                            var errorInstance = jsonErrorObj.Instance;
                       ");
            WriteLiteral(@"     location.href = ""/home/ShowErrorForJSON?errorinstance="" + errorInstance;
                        }
                    });



                },
                customButtons: {

                }
            });
        });

        //  resourcecalendar.render();

        $(function () {

            var annualcyclecalendar = new $('#annualcyclecalendar').fullCalendar({

                validRange: {
                    start: calendarStartDate,
                    end: calendarEndDate
                },
                defaultView: 'agendaWeek',
                customButtons: {

                },
                header: {
                    left: 'prev,next today,monthForward, monthPrev',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                locale: 'da',
                buttonIcons: false, // show the prev/next text
                weekNumbers: true,
                navLinks: true, // can cli");
            WriteLiteral(@"ck day/week names to navigate views
                editable: true,
                droppable: true,
                eventDrop: function (event, delta, revertFunc) {



                    var resourceId = $('#selectcalendarresource option:selected').val()
                    if (resourceId == ""0"") {
                        dialogErrrorNoResurseSelected();
                        revertFunc();
                        return;
                    }

                    $('#calendarEventResourceOwnerId').val(resourceId)



                    var eventObj = event;

                    resetFormFields();

                    if (eventObj.allDay) {
                        var startTime = eventObj.start.format(""kk:mm"");
                        $(""#startdatetimepicker"").val(startTime);
                        $(""#selectallday"").prop(""checked"", true);
                    }
                    else {
                        var startTime = eventObj.start.format(""kk:mm"");
                  ");
            WriteLiteral(@"      var endTime = eventObj.end.format(""kk:mm"");
                        $(""#startdatetimepicker"").val(startTime);
                        $(""#enddatetimepicker"").val(endTime);
                        $(""#selectallday"").prop(""checked"", false);
                    }

                    $('#eventStartDate').val(eventObj.start.format(""DD-MM-YYYY""));
                    $(""#description"").val(eventObj.title);



                    if (eventObj.selectRepeat) {
                        $(""#caleventid"").val(eventObj._id);

                        //$('#rangeWeekDaysValues').val(eventObj.rangeWeekDaysValues);
                        //var selectedweekDaysString = eventObj.rangeWeekDaysValues;
                        //setSelectedBoxOptionsAndValuesValues(""rangeWeekDays"");
                        //setSelectedValues(selectedweekDaysString, ""rangeWeekDays"");

                        $('#startdatetimerangepicker').val(eventObj.start.format(""DD-MM-YYYY""));


                        $('#selectRepeat");
            WriteLiteral(@"').prop(""checked"", true);
                        $(""#selectRepeat"").attr(""disabled"", false);
                        $('#selectRepeatDiv').show();


                        $(""#calendarAction"").val(""Move"");
                        postCalendarEntry();


                        //initializeDialogFormEvent();
                        //$('#description').focus();

                        return;

                    }
                    else {
                        $(""#caleventid"").val(eventObj._id);
                        $('#selectRepeat').prop(""checked"", false);
                        $(""#calendarAction"").val(""Edit"");
                    }

                    postCalendarEntry();
                },
                eventResize: function (event, delta, revertFunc) {

                    var resourceId = $('#selectcalendarresource option:selected').val()
                    if (resourceId == ""0"") {
                        dialogErrrorNoResurseSelected();
                        ");
            WriteLiteral(@"revertFunc();
                        return;
                    }

                    $('#calendarEventResourceOwnerId').val(resourceId)

                    eventObj = event;

                    resetFormFields();

                    setSelectedBoxOptionsAndValuesValues(""rangeWeekDays"");
                    if (eventObj.allDay) {
                        var startTime = eventObj.start.format(""kk:mm"");
                        $(""#startdatetimepicker"").val(startTime);
                        $(""#selectallday"").prop(""checked"", true);
                    }
                    else {
                        var startTime = eventObj.start.format(""kk:mm"");
                        var endTime = eventObj.end.format(""kk:mm"");
                        $(""#startdatetimepicker"").val(startTime);
                        $(""#enddatetimepicker"").val(endTime);
                        $(""#selectallday"").prop(""checked"", false);
                    }

                    $('#eventStartDate').val(eventO");
            WriteLiteral(@"bj.start.format(""DD-MM-YYYY""));
                    $(""#description"").val(eventObj.title);
                    $(""#calendarAction"").val(""Edit"");

                    $('#description').focus();
                    if (eventObj.selectRepeat) {
                        $(""#caleventid"").val(eventObj._id);
                        $('#selectRepeat').prop(""checked"", true);

                        $(""#selectRepeat"").attr(""disabled"", true);
                        $('#eventStartDate').attr(""disabled"", true);
                        $('#selectRepeatDiv').hide();
                    }
                    else {
                        $(""#caleventid"").val(eventObj._id);
                        $('#selectRepeat').prop(""checked"", false);
                    }

                    postCalendarEntry();
                },
                selectable: true,
                select: function (start, end, jsEvent, view) {


                },
                dayClick: function (start, jsEvent, view) {
  ");
            WriteLiteral(@"                  resetFormFields();

                    var resourceId = $('#selectcalendarresource option:selected').val()
                    if (resourceId == ""0"") {
                        dialogErrrorNoResurseSelected();
                        revertFunc();
                        return;
                    }

                    $('#calendarEventResourceOwnerId').val(resourceId)

                    $('#selectRepeatDiv').hide();
                    $('#startdatetimediv').show();
                    $('#enddatetimediv').show();
                    var x = start.format(""DD-MM-YYYY"");
                    var y = start.format(""kk:mm"");
                    $(""#startdatetimepicker"").val(""08:00"");
                    $(""#enddatetimepicker"").val(""16:00"");

                    $('#eventStartDate').val(x);

                    $(""#calendarAction"").val(""Add"");
                    $('#deleteevent').hide();

                    setSelectedBoxOptionsAndValuesValues(""rangeWeekDays"");


");
            WriteLiteral(@"

                    initializeDialogFormEvent();






                },
                eventClick: function (eventObj) {

                    resetFormFields();

                    var resourceId = $('#selectcalendarresource option:selected').val()
                    if (resourceId == ""0"") {
                        dialogErrrorNoResurseSelected();
                        revertFunc();
                        return;
                    }

                    $('#calendarEventResourceOwnerId').val(resourceId)

                    $('#deleteevent').show();

                    if (eventObj.allDay) {
                        var startTime = eventObj.start.format(""kk:mm"");
                        $(""#startdatetimepicker"").val(startTime);
                        $(""#selectallday"").prop(""checked"", true);
                        $('#startdatetimediv').hide();
                        $('#enddatetimediv').hide();
                    }
                    else {
                   ");
            WriteLiteral(@"     var startTime = eventObj.start.format(""kk:mm"");
                        var endTime = eventObj.end.format(""kk:mm"");
                        $(""#startdatetimepicker"").val(startTime);
                        $(""#enddatetimepicker"").val(endTime);
                        $(""#selectallday"").prop(""checked"", false);
                        $('#startdatetimediv').show();
                        $('#enddatetimediv').show();
                    }

                    $('#eventStartDate').val(eventObj.start.format(""DD-MM-YYYY""));
                    $(""#description"").val(eventObj.title);
                    $(""#calendarAction"").val(""Edit"");


                    if (eventObj.selectRepeat) {
                        $(""#caleventid"").val(eventObj._id);
                        $('#selectRepeat').prop(""checked"", true);
                        $(""#selectRepeat"").attr(""disabled"", false);
                        $(""#startdatetimerangepicker"").val(eventObj.startDateTimeRange);
                        $(""#");
            WriteLiteral(@"enddatetimerangepicker"").val(eventObj.endDateTimeRange);

                        $('#rangeWeekDaysValues').val(eventObj.rangeWeekDaysValues);
                        var selectedweekDaysString = eventObj.rangeWeekDaysValues;
                        setSelectedBoxOptionsAndValuesValues(""rangeWeekDays"");
                        setSelectedValues(selectedweekDaysString, ""rangeWeekDays"")



                        $('#selectRepeatDiv').show();
                    }
                    else {
                        $(""#caleventid"").val(eventObj._id);
                        $('#selectRepeat').prop(""checked"", false);

                        $(""#selectRepeat"").attr(""disabled"", false);
                        $('#eventStartDate').attr(""disabled"", false);
                        $('#selectRepeatDiv').hide();
                    }

                    initializeDialogFormEvent();
                    $('#description').focus();
                },
                eventLimit: true, // allow ""more""");
            WriteLiteral(@" link when too many events
                events: function (start, end, timezone, callback) {
                    $.ajax({
                        url: '/booking/GetAnnualCycleCalendar',
                        type: ""GET"",
                        dataType: ""JSON"",

                        success: function (result) {
                            var events = [];

                            $.each(result, function (i, data) {
                                var momentStartDateDA = moment(data.startDateTime, 'DD-MM-YYYY kk:mm')
                                var momentStartDateCalStyleStr = momentStartDateDA.format(""YYYY-MM-DD kk:mm"");
                                var startDateTime = moment(momentStartDateCalStyleStr);

                                var momentEndDateDA = moment(data.endDateTime, 'DD-MM-YYYY kk:mm')
                                var momentEndDateCalStyleStr = momentEndDateDA.format(""YYYY-MM-DD kk:mm"");
                                var endDateTime = moment(momentEndD");
            WriteLiteral(@"ateCalStyleStr);

                                var AllDayFlag = false;
                                if (data.selectallday == ""true"") {
                                    AllDayFlag = true;
                                }

                                var selectRepeatFlag = false;
                                if (data.selectRepeat == ""true"") {
                                    selectRepeatFlag = true;
                                }

                                events.push(
                                    {
                                        _id: data.calEventId,
                                        repeatedId: data.repeatedId,
                                        title: data.description,
                                        start: startDateTime,
                                        end: endDateTime,
                                        allDay: AllDayFlag,
                                        selectRepeat: selectRepeatFlag,
                ");
            WriteLiteral(@"                        startDateTimeRange: data.startDateTimeRange,
                                        endDateTimeRange: data.endDateTimeRange,
                                        rangeWeekDaysValues: data.rangeWeekDaysValues,
                                        textColor: ""#000000"",
                                        backgroundColor: data.eventColor,
                                        borderColor: ""#DD5328""
                                    });
                            });

                            callback(events);
                        },
                        error: function (request, status, error) {
                            var jsonErrorObj = request.responseJSON
                            var errorText = jsonErrorObj.Detail;
                            var errorTitle = jsonErrorObj.Title;
                            var errorInstance = jsonErrorObj.Instance;
                            location.href = ""/home/ShowErrorForJSON?errorinstance="" + erro");
            WriteLiteral(@"rInstance;
                        }
                    });
                }
            });

        });






    });

    function closeForm() {
        document.getElementById(""myForm"").style.display = ""none"";
    }

    function resetFormFields() {
        // clear all fields on form
        $(""#myForm"").find(""input[type=text], textarea"").val("""");
        $(""#selectallday"").prop(""checked"", false);
        $(""#selectRepeat"").prop(""checked"", false);
        // $(""#selectRepeat"").val("""");



        resetSelectedValues(""rangeWeekDays"");
        $('#selectRepeat').prop(""checked"", false);

        $(""#selectRepeat"").attr(""disabled"", false);
        $('#eventStartDate').attr(""disabled"", false);
        $('#selectRepeatDiv').hide();
    }

    function getRepeatedCalendarEvent(calEventId) {

        $.ajax({
            type: ""POST"",
            url: ""/booking/getRepeatedCalendarEvent"",
            data: 'calEventId=' + calEventId,
            contentType: ""applicatio");
            WriteLiteral(@"n/x-www-form-urlencoded; charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                $('#dialogSelectEvents').html(""""),
                    $.each(result, function (i, data) {
                        if (data.calEventId != $(""#caleventid"").val()) {
                            var htmlStr = '<div class=""selectedeventdiv"" id=""' + data.calEventId + '"">';
                            htmlStr = htmlStr = htmlStr + ' <input type=""checkbox"" style=""margin-right: 10px;"" name=""selectEvent"">';
                            if (data.description != """") {
                                htmlStr = htmlStr + data.startDateTime + data.description;
                            }
                            else {
                                htmlStr = htmlStr + data.startDateTime;
                            }

                            htmlStr = htmlStr + '</div>';
                            $('#dialogSelectEvents').append(htmlStr);
                        }
     ");
            WriteLiteral(@"               });
            },
            error: function (request, status, error) {
                var jsonErrorObj = request.responseJSON
                var errorText = jsonErrorObj.Detail;
                var errorTitle = jsonErrorObj.Title;
                var errorInstance = jsonErrorObj.Instance;
                location.href = ""/home/ShowErrorForJSON?errorinstance="" + errorInstance;
            }
        });
    }

    function getAllResources() {
        $.ajax({
            type: ""POST"",
            url: ""/booking/getAllResources"",
            data: 'id=' + ""All"",
            contentType: ""application/x-www-form-urlencoded; charset=utf-8"",
            dataType: ""json"",
            success: function (result) {

                $('#selectcalendarresource').html("""");
                $('#resourceemail').val("""");

                $(""<option/>"", {
                    value: ""0"",
                    text: ""<Vælg resurse>""

                }).appendTo(""#selectcalendarresourc");
            WriteLiteral(@"e"");

                $.each(result, function (i, data) {
                    addResourceColorTagDiv(data),
                        $(""<option/>"", {
                            value: data.id,
                            text: data.jobDescription

                        }).appendTo(""#selectcalendarresource"");
                });

                $('#selectcalendarresource').val(""0"");
            },

            error: function (request, status, error) {
                var jsonErrorObj = request.responseJSON
                var errorText = jsonErrorObj.Detail;
                var errorTitle = jsonErrorObj.Title;
                var errorInstance = jsonErrorObj.Instance;
                location.href = ""/home/ShowErrorForJSON?errorinstance="" + errorInstance;
            }
        });


    }

    function getResource(resourceId) {
        $.ajax({
            type: ""POST"",
            url: ""/booking/getAllResources"",
            data: 'id=' + resourceId,
            contentType:");
            WriteLiteral(@" ""application/x-www-form-urlencoded; charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                $('#resourceemail').val(result[0].emailForCalendar);
                $('#resourcjobservices').val(result[0].jobServiceTypeDescriptions);
                addResourceColorTagDiv(result[0]);
            },

            error: function (request, status, error) {
                var jsonErrorObj = request.responseJSON
                var errorText = jsonErrorObj.Detail;
                var errorTitle = jsonErrorObj.Title;
                var errorInstance = jsonErrorObj.Instance;
                location.href = ""/home/ShowErrorForJSON?errorinstance="" + errorInstance;
            }
        });


    }


    function postCalendarEntry() {

        var JsonCalData = $(""#myForm"").serializeArray()


        $.ajax({
            type: ""POST"",
            url: ""/booking/AddOrEditAnnualCycleEvent"",
            data: JsonCalData,
            contentType: """);
            WriteLiteral(@"application/x-www-form-urlencoded; charset=utf-8"",
            dataType: ""json"",
            success: function (result) {

                $.each(result, function (i, data) {
                    var momentStartDateDA = moment(data.startDateTime, 'DD-MM-YYYY kk:mm')
                    var momentStartDateCalStyleStr = momentStartDateDA.format(""YYYY-MM-DD kk:mm"");
                    var startDateTime = moment(momentStartDateCalStyleStr);

                    var momentEndDateDA = moment(data.endDateTime, 'DD-MM-YYYY kk:mm')
                    var momentEndDateCalStyleStr = momentEndDateDA.format(""YYYY-MM-DD kk:mm"");
                    var endDateTime = moment(momentEndDateCalStyleStr);

                    var AllDayFlag = false;
                    if (data.selectallday == ""true"") {
                        AllDayFlag = true;
                    }

                    var selectRepeatFlag = false;
                    if (data.selectRepeat == ""true"") {
                        selectRepeatF");
            WriteLiteral(@"lag = true;
                    }

                    $('#annualcyclecalendar').fullCalendar('renderEvent', {
                        _id: data.calEventId,
                        repeatedId: data.repeatedId,
                        title: data.description,
                        start: startDateTime,
                        end: endDateTime,
                        allDay: AllDayFlag,
                        selectRepeat: selectRepeatFlag,
                        backgroundColor: ""#F8D69A"",
                        borderColor: ""#DD5328""
                    });
                });

                // $('#annualcyclecalendar').fullCalendar('destroy');
                // $('#annualcyclecalendar').fullCalendar();
                // $('#annualcyclecalendar').fullCalendar('removeEvents');
                $('#annualcyclecalendar').fullCalendar(""refetchEvents"");
            },
            error: function (request, status, error) {
                var jsonErrorObj = request.responseJSON
     ");
            WriteLiteral(@"           var errorText = jsonErrorObj.Detail;
                var errorTitle = jsonErrorObj.Title;
                var errorInstance = jsonErrorObj.Instance;
                location.href = ""/home/ShowErrorForJSON?errorinstance="" + errorInstance;
            }
        });

    }




    function initializeDialogSelectEvents() {

        var selected = 0;
        $('#dialogSelectEvents').dialog({
            title: ""Vælg"",
            buttons: {
                ""Ok"": function () {
                    var events = [];
                    $("".selectedeventdiv"").each(function () {
                        var myCheckbox = $(this).find('input[type=checkbox]');
                        if ($(myCheckbox).prop(""checked"") == true) {
                            events.push($(this).attr(""id""));
                        }
                    });

                    var idStr = events.join();
                    $(""#modifiedRepeatedEventIds"").val(idStr);
                    postCalendarEntry()");
            WriteLiteral(@";
                    $(this).dialog(""close"");

                },
                ""Annuler"": function () {
                    $(""#modifiedRepeatedEventIds"").val("""");
                    $(this).dialog(""close"");
                }
            }
        });
    }

    function initializeDialogFormEvent() {



        $('#dialogformevent').dialog({
            open: function (event, ui) {
                $('#description').focus();
                if ($('#rangeWeekDays').val() == """") {
                    $(""#rangeWeekDays"").val(""1"");
                }
            },
            title: ""Vælg"",
            buttons: [
                {
                    text: ""Gem"",
                    class: 'btn btn-primary',
                    click: function () {
                        var calEventId = $(""#caleventid"").val();
                        var curEvent = $('#annualcyclecalendar').fullCalendar('clientEvents', calEventId)
                        if (typeof curEvent !== 'undefined') {");
            WriteLiteral(@"
                            $('#annualcyclecalendar').fullCalendar(""removeEvents"", calEventId);
                        }


                        var selectedweekDaysArray = $('#rangeWeekDays').val();
                        var selectedweekDaysString = selectedweekDaysArray.join("","");
                        $('#rangeWeekDaysValues').val(selectedweekDaysString);

                        $('#isFromResourceCalendar').val(""false"");


                        if ($(""#calendarAction"").val() == ""Edit"") {
                            if ($(selectRepeat).is(':checked')) {
                                $(""#selectRepeat"").attr(""disabled"", false);
                                $('#selectRepeat').prop(""checked"", true);
                                getRepeatedCalendarEvent(calEventId);
                                initializeDialogSelectEvents();
                            }
                            else {
                                postCalendarEntry();
                            }");
            WriteLiteral(@"
                        }
                        else {
                            postCalendarEntry();
                        }


                        $(this).dialog(""close"");
                    }
                },
                {
                    text: ""Slet"",
                    ""class"": 'btn btn-primary',
                    click: function () {
                        var calEventId = $(""#caleventid"").val();

                        $(""#calendarAction"").val(""Remove"");
                        if ($(selectRepeat).is(':checked')) {
                            $(""#selectRepeat"").attr(""disabled"", false);
                            $('#selectRepeat').prop(""checked"", true);
                            getRepeatedCalendarEvent(calEventId);
                            initializeDialogSelectEvents();
                        }
                        else {
                            postCalendarEntry();
                        }


                        $(this).dialog(""");
            WriteLiteral(@"close"");
                    }
                },
                {
                    text: ""Annuler"",
                    ""class"": 'btn btn-primary',
                    click: function () {
                        $(this).dialog(""close"");
                    }
                }
            ],
            close: function () {
                $(this).dialog(""close"");
            }
        });
    }

    function initializeDialogFormEventOLD() {

        var selected = 0;
        $('#dialogformevent').dialog({
            title: ""Vælg"",
            buttons: {
                ""Gem"": function () {
                    var calEventId = $(""#caleventid"").val();
                    var curEvent = $('#annualcyclecalendar').fullCalendar('clientEvents', calEventId)
                    if (typeof curEvent !== 'undefined') {
                        $('#annualcyclecalendar').fullCalendar(""removeEvents"", calEventId);
                    }

                    var selectedweekDaysArray = $('#r");
            WriteLiteral(@"angeWeekDays').val();
                    var selectedweekDaysString = selectedweekDaysArray.join("","");
                    $('#rangeWeekDaysValues').val(selectedweekDaysString);

                    $('#isFromResourceCalendar').val(""false"");


                    if ($(""#calendarAction"").val() == ""Edit"") {
                        if ($(selectRepeat).is(':checked')) {
                            $(""#selectRepeat"").attr(""disabled"", false);
                            $('#selectRepeat').prop(""checked"", true);
                            getRepeatedCalendarEvent(calEventId);
                            initializeDialogSelectEvents();
                        }
                        else {
                            postCalendarEntry();
                        }
                    }
                    else {
                        postCalendarEntry();
                    }
                    $(this).dialog(""close"");
                },
                ""Slet"": function () {
           ");
            WriteLiteral(@"         var calEventId = $(""#caleventid"").val();

                    $(""#calendarAction"").val(""Remove"");
                    if ($(selectRepeat).is(':checked')) {
                        $(""#selectRepeat"").attr(""disabled"", false);
                        $('#selectRepeat').prop(""checked"", true);
                        getRepeatedCalendarEvent(calEventId);
                        initializeDialogSelectEvents();
                    }
                    else {
                        postCalendarEntry();
                    }

                    $(this).dialog(""close"");
                },

                ""Annuler"": function () {
                    $(this).dialog(""close"");
                }
            }
        });

        $(""#dialogformevent"").dialog(""option"", ""height"", 800);
        $(""#dialogformevent"").dialog(""option"", ""width"", 400);
    }

    function initializeDialogFormresource() {

        var selected = 0;


        $('#dialogSelectResource').dialog({
           ");
            WriteLiteral(@" title: ""Vælg resurse"",
            buttons: {
                ""Hent aftaler"": function () {
                    var resourceId = $('#selectcalendarresource option:selected').val();
                    if (resourceId != ""0"") {
                        $.ajax({
                            type: ""POST"",
                            url: ""/booking/getEventsForResource"",
                            data: 'id=' + resourceId,
                            contentType: ""application/x-www-form-urlencoded; charset=utf-8"",
                            dataType: ""json"",
                            success: function (result) {
                                $.each(result, function (i, data) {
                                    var momentStartDateDA = moment(data.startDateTime, 'DD-MM-YYYY kk:mm')
                                    var momentStartDateCalStyleStr = momentStartDateDA.format(""YYYY-MM-DD kk:mm"");
                                    var startDateTime = moment(momentStartDateCalStyleStr);

      ");
            WriteLiteral(@"                              var momentEndDateDA = moment(data.endDateTime, 'DD-MM-YYYY kk:mm')
                                    var momentEndDateCalStyleStr = momentEndDateDA.format(""YYYY-MM-DD kk:mm"");
                                    var endDateTime = moment(momentEndDateCalStyleStr);

                                    var AllDayFlag = false;
                                    if (data.selectallday == ""true"") {
                                        AllDayFlag = true;
                                    }

                                    var selectRepeatFlag = false;
                                    if (data.selectRepeat == ""true"") {
                                        selectRepeatFlag = true;
                                    }

                                    $('#resourcecalendar').fullCalendar('renderEvent', {
                                        _id: data.calEventId,
                                        calendarEventResourceOwnerId: data.calendarEventRe");
            WriteLiteral(@"sourceOwnerId,
                                        repeatedId: data.repeatedId,
                                        title: data.description,
                                        start: startDateTime,
                                        end: endDateTime,
                                        allDay: AllDayFlag,
                                        selectRepeat: selectRepeatFlag,
                                        backgroundColor: data.eventColor,
                                        borderColor: ""#DD5328""
                                    },
                                        { stick: true }
                                    );
                                });

                            },
                            error: function (request, status, error) {
                                var jsonErrorObj = request.responseJSON
                                var errorText = jsonErrorObj.Detail;
                                var errorTitle = jsonE");
            WriteLiteral(@"rrorObj.Title;
                                var errorInstance = jsonErrorObj.Instance;
                                location.href = ""/home/ShowErrorForJSON?errorinstance="" + errorInstance;
                            }
                        });
                    }

                },

                ""Fjern aftaler"": function () {

                    var resourceId = $('#selectcalendarresource option:selected').val();
                    if (resourceId != ""0"") {
                        $.ajax({
                            type: ""POST"",
                            url: ""/booking/removeEventsForResource"",
                            data: 'id=' + resourceId,
                            contentType: ""application/x-www-form-urlencoded; charset=utf-8"",
                            dataType: ""json"",
                            success: function (result) {

                            },
                              error: function (request, status, error) {
                        ");
            WriteLiteral(@"        var jsonErrorObj = request.responseJSON
                                var errorText = jsonErrorObj.Detail;
                                var errorTitle = jsonErrorObj.Title;
                                var errorInstance = jsonErrorObj.Instance;
                                location.href = ""/home/ShowErrorForJSON?errorinstance="" + errorInstance;
                            }
                        });
                    }

                },
                ""Annuler"": function () {
                    $(this).dialog(""close"");
                }
            }
        });
    }


    function dialogMoveToAnnualCycleCalendar(eventObj) {

        var selected = 0;
        $('#dialogMoveToAnnualCycleCalendar').dialog({
            title: ""Flyt"",
            buttons: {
                ""Flyt"": function () {

                    resetFormFields();

                    if (eventObj.allDay) {
                        var startTime = eventObj.start.format(""kk:mm"");
       ");
            WriteLiteral(@"                 $(""#startdatetimepicker"").val(startTime);
                        $(""#selectallday"").prop(""checked"", true);
                    }
                    else {
                        var startTime = eventObj.start.format(""kk:mm"");
                        var endTime = eventObj.end.format(""kk:mm"");
                        $(""#startdatetimepicker"").val(startTime);
                        $(""#enddatetimepicker"").val(endTime);
                        $(""#selectallday"").prop(""checked"", false);
                    }

                    $('#eventStartDate').val(eventObj.start.format(""DD-MM-YYYY""));
                    $(""#description"").val(eventObj.title);
                    $(""#calendarAction"").val(""MoveFromResourceCalendar"");

                    if (eventObj.selectRepeat) {
                        $(""#caleventid"").val(eventObj._id);
                        $('#selectRepeat').prop(""checked"", true);

                    }
                    else {
                        $(""#c");
            WriteLiteral(@"aleventid"").val(eventObj._id);
                        $('#selectRepeat').prop(""checked"", false);
                    }

                    $(""#calendarEventResourceOwnerId"").val(eventObj.calendarEventResourceOwnerId);


                    postCalendarEntry();

                    var curEvent = $('#resourcecalendar').fullCalendar('clientEvents', eventObj._id)
                    if (typeof curEvent !== 'undefined') {
                        $('#resourcecalendar').fullCalendar(""removeEvents"", eventObj._id);
                    }



                },

                ""Annuler"": function () {
                    $(this).dialog(""close"");
                }
            }
        });
    }

    function dialogErrrorNoResurseSelected() {
        $('#dialogErrrorNoResurseSelected').dialog({
            title: ""Du skal vælge en resurse"",
            buttons: {

                ""Ok"": function () {
                    $(this).dialog(""close"");
                }
            }
        }");
            WriteLiteral(@");
    }



    function setSelectedValues(valueString, selectBoxId) {
        var selectedValues = valueString.split("","");

        var selectboxFieldValues = document.getElementById(selectBoxId);

        for (var i = 0; i < selectboxFieldValues.length; i++) {
            for (var y = 0; y < selectedValues.length; y++) {
                var x = selectedValues[y];
                if (selectboxFieldValues.options[i].value == x) {
                    selectboxFieldValues.options[i].selected = true;
                }
            }

        }
    }


    function setSelectedBoxOptionsAndValuesValues(selectBoxId) {
        var htmlStr = '<option value= ""1"">Mandag</option>';
        htmlStr = htmlStr + '<option value=""2"">Tirsdag</option>';
        htmlStr = htmlStr + '<option value=""3"">Onsdag</option>';
        htmlStr = htmlStr + '<option value=""4"">Torsdag</option>';
        htmlStr = htmlStr + '<option value=""5"">Fredag</option>';
        htmlStr = htmlStr + '<option value=""6"">Lørdag</");
            WriteLiteral(@"option>';
        htmlStr = htmlStr + '<option value=""7"">søndag</option>';

        var selectboxFieldValues = document.getElementById(selectBoxId);

        selectboxFieldValues.innerHTML = htmlStr;
    }

    function resetSelectedValues(selectBoxId) {


        var selectboxFieldValues = document.getElementById(selectBoxId);

        for (var i = 0; i < selectboxFieldValues.length; i++) {
            selectboxFieldValues.options[i].selected = false;

        }
    }

    function toggleshowresourcecalendar() {

        if ($(""#resourcecalendarcolumn"").is("":visible"")) {
            $('#resourcecalendarcolumn').hide();
        }
        else {
            $('#resourcecalendarcolumn').show();
        }



    }

    function addResourceColorTagDiv(jsonResource) {


        var htmlStr = '<div style=""margin-bottom : 10px;background-color :' + jsonResource.calendarEntryColor + '"">' + jsonResource.jobDescription + '<div>'
        $(""#resourceColorTagdiv"").append(htmlStr);

 ");
            WriteLiteral("   }\r\n\r\n</script>\r\n\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
